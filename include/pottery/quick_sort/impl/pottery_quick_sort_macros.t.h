/*
 * MIT License
 *
 * Copyright (c) 2020 Nicholas Fraser
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

#ifndef POTTERY_QUICK_SORT_IMPL
#error "This is an internal header. Do not include it."
#endif

#include "pottery/pottery_dependencies.h"



/*
 * Configuration
 */

#ifndef POTTERY_QUICK_SORT_PREFIX
    #error "POTTERY_QUICK_SORT_PREFIX is not defined."
#endif

#if !POTTERY_LIFECYCLE_CAN_SWAP
    #error "A move or swap expression is required."
#endif
#if !POTTERY_COMPARE_CAN_ORDER
    #error "An ordering comparison expression is required."
#endif

#ifndef POTTERY_QUICK_SORT_EXTERN
    #define POTTERY_QUICK_SORT_EXTERN /*nothing*/
#endif

// Context forwarding
#ifdef POTTERY_QUICK_SORT_CONTEXT_TYPE
    #define POTTERY_QUICK_SORT_CONTEXT_VAL(state) state.context,
#else
    #define POTTERY_QUICK_SORT_CONTEXT_VAL(state) /*nothing*/
#endif



/*
 * Renaming
 */

#define POTTERY_QUICK_SORT_NAME(name) \
    POTTERY_CONCAT(POTTERY_QUICK_SORT_PREFIX, name)

// TODO legacy names
#define pottery_ref_t POTTERY_QUICK_SORT_NAME(_ref_t)
#define pottery_value_t POTTERY_QUICK_SORT_NAME(_value_t)
#define pottery_context_t POTTERY_QUICK_SORT_NAME(_context_t)
#define pottery_state_t POTTERY_QUICK_SORT_NAME(_state_t)
#define pottery_access POTTERY_QUICK_SORT_NAME(_access)
#define pottery_before POTTERY_QUICK_SORT_NAME(_before)
#define pottery_swap POTTERY_QUICK_SORT_NAME(_swap)
#define pottery_quicksort_prepare_pivot POTTERY_QUICK_SORT_NAME(_prepare_pivot)
#define pottery_quicksort_partition POTTERY_QUICK_SORT_NAME(_partition)
#define pottery_quicksort_impl POTTERY_QUICK_SORT_NAME(_impl)

//!!! AUTOGENERATED:quick_sort/rename.t PREFIX:pottery_quick_sort MACRO:POTTERY_QUICK_SORT_NAME
    // This block is auto-generated. Do not modify until END_AUTOGENERATED.
    // Renames quick_sort identifiers with prefix "pottery_quick_sort"
    // using macro POTTERY_QUICK_SORT_NAME()
    #define pottery_quick_sort_ref_t POTTERY_QUICK_SORT_NAME(_ref_t)
    #define pottery_quick_sort_const_ref_t POTTERY_QUICK_SORT_NAME(_const_ref_t)
    #define pottery_quick_sort_value_t POTTERY_QUICK_SORT_NAME(_value_t)
    #define pottery_quick_sort_context_t POTTERY_QUICK_SORT_NAME(_context_t)
    #define pottery_quick_sort_state_t POTTERY_QUICK_SORT_NAME(_state_t)

    #define pottery_quick_sort POTTERY_QUICK_SORT_NAME()
    #define pottery_quick_sort_access POTTERY_QUICK_SORT_NAME(_access)
    #define pottery_quick_sort_prepare_pivot POTTERY_QUICK_SORT_NAME(_prepare_pivot)
    #define pottery_quick_sort_partition POTTERY_QUICK_SORT_NAME(_partition)
    #define pottery_quick_sort_impl POTTERY_QUICK_SORT_NAME(_impl)
//!!! END_AUTOGENERATED



// lifecycle functions
#ifdef POTTERY_QUICK_SORT_EXTERNAL_LIFECYCLE
    #define POTTERY_QUICK_SORT_LIFECYCLE_NAME(x) POTTERY_CONCAT(POTTERY_QUICK_SORT_EXTERNAL_LIFECYCLE, x)
#else
    #define POTTERY_QUICK_SORT_LIFECYCLE_NAME(x) POTTERY_QUICK_SORT_NAME(POTTERY_CONCAT(_lifecycle, x))
#endif
//!!! AUTOGENERATED:lifecycle/rename.t PREFIX:pottery_quick_sort_lifecycle MACRO:POTTERY_QUICK_SORT_LIFECYCLE_NAME
    // This block is auto-generated. Do not modify until END_AUTOGENERATED.

    // Renames lifecycle identifiers with prefix "pottery_quick_sort_lifecycle" using macro POTTERY_QUICK_SORT_LIFECYCLE_NAME()

    // types
    #define pottery_quick_sort_lifecycle_value_t POTTERY_QUICK_SORT_LIFECYCLE_NAME(_value_t)
    #define pottery_quick_sort_lifecycle_ref_t POTTERY_QUICK_SORT_LIFECYCLE_NAME(_ref_t)
    #define pottery_quick_sort_lifecycle_const_ref_t POTTERY_QUICK_SORT_LIFECYCLE_NAME(_const_ref_t)
    #define pottery_quick_sort_lifecycle_context_t POTTERY_QUICK_SORT_LIFECYCLE_NAME(_context_t)

    // fundamental operations
    #define pottery_quick_sort_lifecycle_init_steal POTTERY_QUICK_SORT_LIFECYCLE_NAME(_init_steal)
    #define pottery_quick_sort_lifecycle_init_copy POTTERY_QUICK_SORT_LIFECYCLE_NAME(_init_copy)
    #define pottery_quick_sort_lifecycle_init POTTERY_QUICK_SORT_LIFECYCLE_NAME(_init)
    #define pottery_quick_sort_lifecycle_destroy POTTERY_QUICK_SORT_LIFECYCLE_NAME(_destroy)
    #define pottery_quick_sort_lifecycle_swap POTTERY_QUICK_SORT_LIFECYCLE_NAME(_swap)
    #define pottery_quick_sort_lifecycle_move POTTERY_QUICK_SORT_LIFECYCLE_NAME(_move)
    #define pottery_quick_sort_lifecycle_steal POTTERY_QUICK_SORT_LIFECYCLE_NAME(_steal)
    #define pottery_quick_sort_lifecycle_copy POTTERY_QUICK_SORT_LIFECYCLE_NAME(_copy)

    // bulk operations
    #define pottery_quick_sort_lifecycle_destroy_bulk POTTERY_QUICK_SORT_LIFECYCLE_NAME(_destroy_bulk)
    #define pottery_quick_sort_lifecycle_move_bulk POTTERY_QUICK_SORT_LIFECYCLE_NAME(_move_bulk)
    #define pottery_quick_sort_lifecycle_move_bulk_restrict POTTERY_QUICK_SORT_LIFECYCLE_NAME(_move_bulk_restrict)
    #define pottery_quick_sort_lifecycle_move_bulk_restrict_impl POTTERY_QUICK_SORT_LIFECYCLE_NAME(_move_bulk_restrict_impl)
    #define pottery_quick_sort_lifecycle_move_bulk_up POTTERY_QUICK_SORT_LIFECYCLE_NAME(_move_bulk_up)
    #define pottery_quick_sort_lifecycle_move_bulk_up_impl POTTERY_QUICK_SORT_LIFECYCLE_NAME(_move_bulk_up_impl)
    #define pottery_quick_sort_lifecycle_move_bulk_down POTTERY_QUICK_SORT_LIFECYCLE_NAME(_move_bulk_down)
    #define pottery_quick_sort_lifecycle_move_bulk_down_impl POTTERY_QUICK_SORT_LIFECYCLE_NAME(_move_bulk_down_impl)

    // C++
    #define pottery_quick_sort_lifecycle_construct POTTERY_QUICK_SORT_LIFECYCLE_NAME(_construct)
    #define pottery_quick_sort_lifecycle_assign POTTERY_QUICK_SORT_LIFECYCLE_NAME(_assign)
//!!! END_AUTOGENERATED



// compare functions
#ifdef POTTERY_QUICK_SORT_EXTERNAL_COMPARE
    #define POTTERY_QUICK_SORT_COMPARE_NAME(x) POTTERY_CONCAT(POTTERY_QUICK_SORT_EXTERNAL_COMPARE, x)
#else
    #define POTTERY_QUICK_SORT_COMPARE_NAME(x) POTTERY_QUICK_SORT_NAME(POTTERY_CONCAT(_compare, x))
#endif
//!!! AUTOGENERATED:compare/rename.t PREFIX:pottery_quick_sort_compare MACRO:POTTERY_QUICK_SORT_COMPARE_NAME
    // This block is auto-generated. Do not modify until END_AUTOGENERATED.
    // Renames compare identifiers with prefix "pottery_quick_sort_compare"
    // using macro POTTERY_QUICK_SORT_COMPARE_NAME()
    #define pottery_quick_sort_compare_ref_t POTTERY_QUICK_SORT_COMPARE_NAME(_ref_t)
    #define pottery_quick_sort_compare_value_t POTTERY_QUICK_SORT_COMPARE_NAME(_value_t)
    #define pottery_quick_sort_compare_context_t POTTERY_QUICK_SORT_COMPARE_NAME(_context_t)

    #define pottery_quick_sort_compare_three_way POTTERY_QUICK_SORT_COMPARE_NAME(_three_way)
    #define pottery_quick_sort_compare_equal POTTERY_QUICK_SORT_COMPARE_NAME(_equal)
    #define pottery_quick_sort_compare_not_equal POTTERY_QUICK_SORT_COMPARE_NAME(_not_equal)
    #define pottery_quick_sort_compare_less POTTERY_QUICK_SORT_COMPARE_NAME(_less)
    #define pottery_quick_sort_compare_less_or_equal POTTERY_QUICK_SORT_COMPARE_NAME(_less_or_equal)
    #define pottery_quick_sort_compare_greater POTTERY_QUICK_SORT_COMPARE_NAME(_greater)
    #define pottery_quick_sort_compare_greater_or_equal POTTERY_QUICK_SORT_COMPARE_NAME(_greater_or_equal)

    #define pottery_quick_sort_compare_min POTTERY_QUICK_SORT_COMPARE_NAME(_min)
    #define pottery_quick_sort_compare_max POTTERY_QUICK_SORT_COMPARE_NAME(_max)
    #define pottery_quick_sort_compare_clamp POTTERY_QUICK_SORT_COMPARE_NAME(_clamp)
    #define pottery_quick_sort_compare_median POTTERY_QUICK_SORT_COMPARE_NAME(_median)
//!!! END_AUTOGENERATED
